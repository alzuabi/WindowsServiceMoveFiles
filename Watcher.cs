using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WindowsServiceTest1.Service
{
    class Watcher : IDisposable
    {
        private FileSystemWatcher _watcher;
        EventLog eventLog;
        private static readonly Watcher instance = new Watcher();

        private FileSystemWatcher watcher
        {
            get => _watcher;
            set => _watcher = value;
        }

        private Watcher(FileSystemWatcher watcher) => this._watcher = watcher;

        private Watcher()
        {
        }
        static Watcher()
        {
        }

        public static Watcher Instance
        {
            get
            {

                return instance;
            }
        }

        internal void LogEventStart()
        {
            if (!EventLog.SourceExists("MultiSys"))

            {
                EventLog.CreateEventSource("MultiSys", "MyNewLog");

            }

            // Create an EventLog instance and assign its source.

            eventLog = new EventLog();

            // Setting the source
            eventLog.Log = "MyNewLog";

            eventLog.Source = "MultiSys";



            // Write an entry to the event log.

            eventLog.WriteEntry("Start Multisys.", EventLogEntryType.SuccessAudit, 100);

        }

        internal void LogEventSTop()
        {
            eventLog.Source = "MultiSys";



            // Write an entry to the event log.

            eventLog.WriteEntry("Stop Multisys.", EventLogEntryType.SuccessAudit, 100);
        }

        private void OnChanged(object source, FileSystemEventArgs e)
        {
            eventLog.WriteEntry("OnChanged", EventLogEntryType.Information, 100);
            eventLog.WriteEntry("e.file " +e.FullPath, EventLogEntryType.Information, 100);
            string dest = Path.Combine(@"C:\Users\ASUS\dist", e.Name);
            if (File.Exists(dest))
            {
                File.Delete(e.FullPath);
            }
            else
            {
                File.Move(e.FullPath, dest);
            }

            //eventLog.Source = "MultiSys";



            // Write an entry to the event log.

            eventLog.WriteEntry("onChanged An error has been generated by the application.", EventLogEntryType.Error, 1002);
        }
        public Watcher GetWatcherForDirectory(String path)
        {
            watcher = new FileSystemWatcher
            {
                Path = path,
                NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite
                                   | NotifyFilters.FileName | NotifyFilters.DirectoryName,
                Filter = "*.*"
            };
            watcher.Changed += new FileSystemEventHandler(OnChanged);
            watcher.EnableRaisingEvents = true;
            return new Watcher(watcher);
        }

        public void Dispose()
        {

        }


    }
}
